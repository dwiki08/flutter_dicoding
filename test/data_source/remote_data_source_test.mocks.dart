// Mocks generated by Mockito 5.4.4 from annotations
// in dicoding_flutter/test/data_source/remote_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:chopper/chopper.dart' as _i3;
import 'package:dicoding_flutter/data/remote/request/add_review_request.dart'
    as _i9;
import 'package:dicoding_flutter/data/remote/response/general_response.dart'
    as _i8;
import 'package:dicoding_flutter/data/remote/response/restaurant_detail_response.dart'
    as _i7;
import 'package:dicoding_flutter/data/remote/response/restaurant_list_response.dart'
    as _i6;
import 'package:dicoding_flutter/data/remote/service/api_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeType_0 extends _i1.SmartFake implements Type {
  _FakeType_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i2.ApiService {
  @override
  _i3.ChopperClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _i4.dummyValue<_i3.ChopperClient>(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _i4.dummyValue<_i3.ChopperClient>(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.ChopperClient);

  @override
  set client(_i3.ChopperClient? _client) => super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Type get definitionType => (super.noSuchMethod(
        Invocation.getter(#definitionType),
        returnValue: _FakeType_0(
          this,
          Invocation.getter(#definitionType),
        ),
        returnValueForMissingStub: _FakeType_0(
          this,
          Invocation.getter(#definitionType),
        ),
      ) as Type);

  @override
  _i5.Future<_i3.Response<_i6.RestaurantListResponse>> getRestaurants() =>
      (super.noSuchMethod(
        Invocation.method(
          #getRestaurants,
          [],
        ),
        returnValue: _i5.Future<_i3.Response<_i6.RestaurantListResponse>>.value(
            _i4.dummyValue<_i3.Response<_i6.RestaurantListResponse>>(
          this,
          Invocation.method(
            #getRestaurants,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Response<_i6.RestaurantListResponse>>.value(
                _i4.dummyValue<_i3.Response<_i6.RestaurantListResponse>>(
          this,
          Invocation.method(
            #getRestaurants,
            [],
          ),
        )),
      ) as _i5.Future<_i3.Response<_i6.RestaurantListResponse>>);

  @override
  _i5.Future<_i3.Response<_i7.RestaurantDetailResponse>> getRestaurant(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRestaurant,
          [id],
        ),
        returnValue:
            _i5.Future<_i3.Response<_i7.RestaurantDetailResponse>>.value(
                _i4.dummyValue<_i3.Response<_i7.RestaurantDetailResponse>>(
          this,
          Invocation.method(
            #getRestaurant,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Response<_i7.RestaurantDetailResponse>>.value(
                _i4.dummyValue<_i3.Response<_i7.RestaurantDetailResponse>>(
          this,
          Invocation.method(
            #getRestaurant,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Response<_i7.RestaurantDetailResponse>>);

  @override
  _i5.Future<_i3.Response<_i6.RestaurantListResponse>> searchRestaurants(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchRestaurants,
          [query],
        ),
        returnValue: _i5.Future<_i3.Response<_i6.RestaurantListResponse>>.value(
            _i4.dummyValue<_i3.Response<_i6.RestaurantListResponse>>(
          this,
          Invocation.method(
            #searchRestaurants,
            [query],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Response<_i6.RestaurantListResponse>>.value(
                _i4.dummyValue<_i3.Response<_i6.RestaurantListResponse>>(
          this,
          Invocation.method(
            #searchRestaurants,
            [query],
          ),
        )),
      ) as _i5.Future<_i3.Response<_i6.RestaurantListResponse>>);

  @override
  _i5.Future<_i3.Response<_i8.GeneralResponse>> addReview(
          _i9.AddReviewRequest? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #addReview,
          [body],
        ),
        returnValue: _i5.Future<_i3.Response<_i8.GeneralResponse>>.value(
            _i4.dummyValue<_i3.Response<_i8.GeneralResponse>>(
          this,
          Invocation.method(
            #addReview,
            [body],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Response<_i8.GeneralResponse>>.value(
                _i4.dummyValue<_i3.Response<_i8.GeneralResponse>>(
          this,
          Invocation.method(
            #addReview,
            [body],
          ),
        )),
      ) as _i5.Future<_i3.Response<_i8.GeneralResponse>>);
}
